{"version":3,"sources":["components/MapSwitcher.js","../node_modules/react-use/esm/useIsomorphicLayoutEffect.js","../node_modules/react-use/esm/useMeasure.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["MapSwitcher","mapStatistic","setMapStatistic","useMeasure","mapSwitcher","width","useState","clicked","setClicked","count","setCount","useSpring","opacity","background","STATISTIC_CONFIGS","color","transform","PRIMARY_STATISTICS","indexOf","config","gentle","spring","set","useEffect","ReactDOM","unstable_batchedUpdates","delay","onStart","bind","onRest","handleClick","useCallback","statistic","prevCount","className","ref","div","style","map","index","classnames","onClick","isEqual","prevProps","currProps","memo","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","defaultState","x","y","height","top","left","bottom","right","window","ResizeObserver","_a","element","_b","rect","setRect","observer","useMemo","entries","contentRect","top_1","observe","disconnect","noop","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/22.e1d24fbb.chunk.js","sourcesContent":["import {PRIMARY_STATISTICS, STATISTIC_CONFIGS} from '../constants';\n\nimport classnames from 'classnames';\nimport {memo, useState, useCallback, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useSpring, animated, config} from 'react-spring';\nimport {useMeasure} from 'react-use';\n\nconst MapSwitcher = ({mapStatistic, setMapStatistic}) => {\n  const [mapSwitcher, {width}] = useMeasure();\n  const [clicked, setClicked] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const [spring, set] = useSpring(() => ({\n    opacity: 0,\n    background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n    transform: `translate3d(${\n      width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25\n    }px, 0, 0)`,\n    config: config.gentle,\n  }));\n\n  useEffect(() => {\n    if (width > 0) {\n      ReactDOM.unstable_batchedUpdates(() => {\n        set({\n          transform: `translate3d(${\n            width * PRIMARY_STATISTICS.indexOf(mapStatistic) * 0.25\n          }px, 0, 0)`,\n          opacity: 1,\n          background: `${STATISTIC_CONFIGS[mapStatistic].color}20`,\n          delay: count === 0 ? 1500 : 0,\n          onStart: setClicked.bind(this, true),\n          onRest: setClicked.bind(this, false),\n        });\n      });\n    }\n  }, [count, mapStatistic, set, width]);\n\n  const handleClick = useCallback(\n    (statistic) => {\n      setCount((prevCount) => prevCount + 1);\n      setMapStatistic(statistic);\n    },\n    [setMapStatistic]\n  );\n\n  return (\n    <div className=\"MapSwitcher\" ref={mapSwitcher}>\n      <animated.div className=\"highlight\" style={spring}></animated.div>\n\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <div\n          key={index}\n          className={classnames('clickable', {[`is-${statistic}`]: !clicked})}\n          onClick={handleClick.bind(this, statistic)}\n        ></div>\n      ))}\n    </div>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (prevProps.mapStatistic !== currProps.mapStatistic) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(MapSwitcher, isEqual);\n","import { useEffect, useLayoutEffect } from 'react';\nimport { isBrowser } from './misc/util';\nvar useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\nexport default useIsomorphicLayoutEffect;\n","import { useMemo, useState } from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nimport { isBrowser, noop } from './misc/util';\nvar defaultState = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nfunction useMeasure() {\n    var _a = useState(null), element = _a[0], ref = _a[1];\n    var _b = useState(defaultState), rect = _b[0], setRect = _b[1];\n    var observer = useMemo(function () {\n        return new window.ResizeObserver(function (entries) {\n            if (entries[0]) {\n                var _a = entries[0].contentRect, x = _a.x, y = _a.y, width = _a.width, height = _a.height, top_1 = _a.top, left = _a.left, bottom = _a.bottom, right = _a.right;\n                setRect({ x: x, y: y, width: width, height: height, top: top_1, left: left, bottom: bottom, right: right });\n            }\n        });\n    }, []);\n    useIsomorphicLayoutEffect(function () {\n        if (!element)\n            return;\n        observer.observe(element);\n        return function () {\n            observer.disconnect();\n        };\n    }, [element]);\n    return [ref, rect];\n}\nexport default isBrowser && typeof window.ResizeObserver !== 'undefined'\n    ? useMeasure\n    : (function () { return [noop, defaultState]; });\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}